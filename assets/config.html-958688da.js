import{_ as t,V as p,W as c,X as n,Y as e,Z as o,$ as s,F as l}from"./framework-159025ca.js";const i={},u=s('<h1 id="nacos配置中心" tabindex="-1"><a class="header-anchor" href="#nacos配置中心" aria-hidden="true">#</a> nacos配置中心</h1><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>2.x中，Nacos配置中心主要的改动在于<strong>引进长连接代替了短连接长轮询</strong>。</p><p>1.x中，Nacos配置中心通过长轮询的方式更新客户端配置，属于客户端主动拉取配置；</p><p>2.x中，Nacos配置中心支持客户端定时同步配置，服务端回调通知，所以2.x属于推拉结合的方式。</p><ul><li><strong>拉：客户端会对全量CacheData发起配置监听请求ConfigBatchListenRequest</strong>，如果配置md5发生变更，会同步收到变更配置项，发起<strong>ConfigQuery</strong>请求查询实时配置。</li><li><strong>推</strong>：服务端配置变更，会发送<strong>ConfigChangeNotifyRequest</strong>请求给与当前节点建立长连接的客户端通知配置变更项。</li></ul><p>由于2.x使用长连接代替长轮询，监听请求ConfigBatchListenRequest不会被服务端hold住，会立即返回。服务端只是将监听关系保存在内存中，方便后续通知。</p><p><strong>groupKey和connectionId的映射关系，方便后续通过变更配置项找到对应客户端长连接</strong>；connectionId和groupKey的映射关系，只是为了控制台展示。这些关系保存在服务端的<strong>ConfigChangeListenContext</strong>单例中。</p><p>1.x需要通过groupKey找到仍然在进行长轮询的客户端AsyncContext；2.x是通过groupKey找到connectionId，再通过connectionId找到长连接，发送ConfigChangeNotifyRequest通知客户端配置变更。</p><h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述" aria-hidden="true">#</a> 概述</h2><ul><li><p>客户端程序启动拉取配置。</p></li><li><p>客户端注册配置变化监听器。</p></li><li><p>客户端查询配置。</p></li><li><p>客户端修改配置。</p></li><li><p>服务端程序启动保存配置到磁盘。</p></li><li><p>服务端注册监听到客户端信息。</p></li><li><p>服务端查询配置。</p></li><li><p>服务端修改配置。</p></li><li><p>服务端通知监听。</p></li></ul><p>本文以nacos2.x分析。需要结合spring cloud alibaba、spring boot配置加载相关逻辑。</p><p>Nacos 配置管理一致性协议分为两个大部分，第一部分是 Server 间一致性协议，一个是 SDK 与 Server 的一致性协议，配置作为分布式系统中非强一致数据，在现脑裂的时候可用性高于一致性， 因此阿里配置中心是采用 AP 一致性协议。</p><p><strong>Server 间的一致性协议</strong></p><p><strong>有 DB 模式(读写分离架构)</strong></p><p>一致性的核心是 Server 与 DB 保持数据一致性，从而保证 Server 数据一致;Server 之间都是对 等的。数据写任何一个 Server，优先持久化，持久化成功后异步通知其他节点到数据库中拉取最新 配置值，并且通知写入成功。</p><p><img src="https://cdn.jsdelivr.net/gh/fxzbiz/img@url/2024/03/03/uE8AUu.png" alt="" loading="lazy"><strong>无 DB 模式</strong></p><p>Server 间采用 Raft 协议保证数据一致性，行业大部分产品采用此模式，因此不展开介绍。Nacos 提供此模式，是方便用户本机运行，降低对存储依赖。</p><p><strong>SDK 与 Server 的一致性协议</strong></p><p>SDK 与 Server 一致性协议的核心是通过 MD5 值是否一致，如果不一致就拉取最新值。</p><p><strong>Nacos 1.X</strong></p><p>Nacos 1.X 采用 Http 1.1 短链接模拟长链接，每 30s 发一个心跳跟 Server 对比 SDK 配置 MD 5 值是否跟 Server 保持一致，如果一致就 hold 住链接，如果有不一致配置，就把不一致的配置 返回，然后 SDK 获取最新配置值。</p><figure><img src="https://cdn.jsdelivr.net/gh/fxzbiz/img@url/2024/03/03/nyWbV4.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>Nacos 2.X</strong></p><p>Nacos 2.x 相比上面 30s 一次的长轮训，升级成长链接模式，配置变更，启动建立长链接，配置变更服务端推送变更配置列表，然后 SDK 拉取配置更新，因此通信效率大幅提升。</p><h2 id="客户端" tabindex="-1"><a class="header-anchor" href="#客户端" aria-hidden="true">#</a> 客户端</h2><h3 id="客户端程序启动拉取配置" tabindex="-1"><a class="header-anchor" href="#客户端程序启动拉取配置" aria-hidden="true">#</a> 客户端程序启动拉取配置</h3><p>这一部分在springbooot配置加载相关文章中分析过了。nacos基于springboot2.4以后提供的imports机制做了拓展。客户端代码最终都是通过NacosConfigService去操作配置的。</p>',28),k={href:"https://fxzcloud.tech/source-code/SpringBoot/config.html",target:"_blank",rel:"noopener noreferrer"},r=s(`<h3 id="客户端配置监听器逻辑" tabindex="-1"><a class="header-anchor" href="#客户端配置监听器逻辑" aria-hidden="true">#</a> 客户端配置监听器逻辑</h3><ul><li>客户端在启动的时候会轮训配置监听器，请求服务端看配置是否变化，配置变化则回调监听器方法，最终发布RefreshEvent，触发springcloud配置动态刷新的逻辑。</li><li>客户端注册ConfigChangeNotifyRequest的处理器，服务端配置变化的时候会发生ConfigChangeNotifyRequest，最终客户端执行的还是上述轮训逻辑。</li></ul><p>NacosConfigService会创建ClientWorker和服务端通信。ClientWorker中初始化ConfigRpcTransportClient并且调用他的start方法。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">ClientWorker</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">ConfigFilterChainManager</span> configFilterChainManager<span class="token punctuation">,</span> <span class="token class-name">ServerListManager</span> serverListManager<span class="token punctuation">,</span>
        <span class="token keyword">final</span> <span class="token class-name">Properties</span> properties<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">NacosException</span> <span class="token punctuation">{</span>
		
  	<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
      
    agent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConfigRpcTransportClient</span><span class="token punctuation">(</span>properties<span class="token punctuation">,</span> serverListManager<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token class-name">ThreadUtils</span><span class="token punctuation">.</span><span class="token function">getSuitableThreadCount</span><span class="token punctuation">(</span><span class="token constant">THREAD_MULTIPLE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">ScheduledExecutorService</span> executorService <span class="token operator">=</span> <span class="token class-name">Executors</span>
            <span class="token punctuation">.</span><span class="token function">newScheduledThreadPool</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>count<span class="token punctuation">,</span> <span class="token constant">MIN_THREAD_NUM</span><span class="token punctuation">)</span><span class="token punctuation">,</span> r <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                <span class="token class-name">Thread</span> t <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span>
                t<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&quot;com.alibaba.nacos.client.Worker&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                t<span class="token punctuation">.</span><span class="token function">setDaemon</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> t<span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    agent<span class="token punctuation">.</span><span class="token function">setExecutor</span><span class="token punctuation">(</span>executorService<span class="token punctuation">)</span><span class="token punctuation">;</span>
    agent<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ConfigRpcTransportClient的start方法会执行内部的监听任务即executeConfigListen方法。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">ConfigRpcTransportClient</span>：
  
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">NacosException</span> <span class="token punctuation">{</span>
   	<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> 
    <span class="token function">startInternal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">startInternal</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">NacosException</span> <span class="token punctuation">{</span>
    executor<span class="token punctuation">.</span><span class="token function">schedule</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>executor<span class="token punctuation">.</span><span class="token function">isShutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>executor<span class="token punctuation">.</span><span class="token function">isTerminated</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
              	<span class="token comment">// 并发控制 典型的消费者生产者模型</span>
                listenExecutebell<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token number">5L</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>executor<span class="token punctuation">.</span><span class="token function">isShutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> executor<span class="token punctuation">.</span><span class="token function">isTerminated</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">continue</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
              	<span class="token comment">// 执行内部监听</span>
                <span class="token function">executeConfigListen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token constant">LOGGER</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;[ rpc listen execute ] [rpc listen] exception&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0L</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">MILLISECONDS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>客户端会不断循环监听缓存，检查是否要更新缓存。关键的代码在checkListenCache方法。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>  			<span class="token doc-comment comment">/**
         * 执行配置监听
         */</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">executeConfigListen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
						<span class="token comment">// 需要注册的监听</span>
            <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">CacheData</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> listenCachesMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          	<span class="token comment">// 需要注销的监听</span>
            <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">CacheData</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> removeListenCachesMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// 是否需要全量同步 根据时间间隔判断</span>
            <span class="token keyword">long</span> now <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">boolean</span> needAllSync <span class="token operator">=</span> now <span class="token operator">-</span> lastAllSyncTime <span class="token operator">&gt;=</span> <span class="token constant">ALL_SYNC_INTERNAL</span><span class="token punctuation">;</span>

          	<span class="token comment">// 遍历所有监听缓存</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">CacheData</span> cache <span class="token operator">:</span> cacheMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

                <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>cache<span class="token punctuation">)</span> <span class="token punctuation">{</span>

                    <span class="token comment">// 检查本地配置信息是否发生了变化 并更新CacheData信息</span>
                    <span class="token function">checkLocalConfig</span><span class="token punctuation">(</span>cache<span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token comment">// 本地缓存是否和服务器一致。</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>cache<span class="token punctuation">.</span><span class="token function">isConsistentWithServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        cache<span class="token punctuation">.</span><span class="token function">checkListenerMd5</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>needAllSync<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token keyword">continue</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>

                    <span class="token comment">// 如果使用了本地配置信息，则直接跳过处理。</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>cache<span class="token punctuation">.</span><span class="token function">isUseLocalConfigInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">continue</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>

                    <span class="token comment">// 判断缓存的信息是否是废弃的</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>cache<span class="token punctuation">.</span><span class="token function">isDiscard</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token comment">// 不是废弃的 则需要监听</span>
                        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CacheData</span><span class="token punctuation">&gt;</span></span> cacheDatas <span class="token operator">=</span> listenCachesMap<span class="token punctuation">.</span><span class="token function">computeIfAbsent</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>cache<span class="token punctuation">.</span><span class="token function">getTaskId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                k <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        cacheDatas<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cache<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                        <span class="token comment">// 是废弃的 则需要移除监听</span>
                        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CacheData</span><span class="token punctuation">&gt;</span></span> cacheDatas <span class="token operator">=</span> removeListenCachesMap<span class="token punctuation">.</span><span class="token function">computeIfAbsent</span><span class="token punctuation">(</span>
                                <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>cache<span class="token punctuation">.</span><span class="token function">getTaskId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> k <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        cacheDatas<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cache<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>

            <span class="token punctuation">}</span>

            <span class="token comment">// 执行check listen，如果有更改键，则返回true。</span>
            <span class="token keyword">boolean</span> hasChangedKeys <span class="token operator">=</span> <span class="token function">checkListenCache</span><span class="token punctuation">(</span>listenCachesMap<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">//execute check remove listen.</span>
            <span class="token function">checkRemoveListenCache</span><span class="token punctuation">(</span>removeListenCachesMap<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>needAllSync<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                lastAllSyncTime <span class="token operator">=</span> now<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//If has changed keys,notify re sync md5.</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>hasChangedKeys<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">notifyListenConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>checkListenCache方法通过构建ConfigBatchListenRequest请求，注册到服务端当前客户端配置的md5，获取配置变化可以直接通知客户端。如果配置变更则刷新变更的配置，同时通知监听器。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">checkListenCache</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">CacheData</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> listenCachesMap<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token keyword">final</span> <span class="token class-name">AtomicBoolean</span> hasChangedKeys <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicBoolean</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>listenCachesMap<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Future</span><span class="token punctuation">&gt;</span></span> listenFutures <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">CacheData</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> entry <span class="token operator">:</span> listenCachesMap<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> taskId <span class="token operator">=</span> entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">ExecutorService</span> executorService <span class="token operator">=</span> <span class="token function">ensureSyncExecutor</span><span class="token punctuation">(</span>taskId<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Future</span> future <span class="token operator">=</span> executorService<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CacheData</span><span class="token punctuation">&gt;</span></span> listenCaches <span class="token operator">=</span> entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 重置通知更改标志。</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">CacheData</span> cacheData <span class="token operator">:</span> listenCaches<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    cacheData<span class="token punctuation">.</span><span class="token function">getReceiveNotifyChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token class-name">ConfigBatchListenRequest</span> configChangeListenRequest <span class="token operator">=</span> <span class="token function">buildConfigRequest</span><span class="token punctuation">(</span>listenCaches<span class="token punctuation">)</span><span class="token punctuation">;</span>
                configChangeListenRequest<span class="token punctuation">.</span><span class="token function">setListen</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token class-name">RpcClient</span> rpcClient <span class="token operator">=</span> <span class="token function">ensureRpcClient</span><span class="token punctuation">(</span>taskId<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">// 请求服务端 配置批量监听请求</span>
                    <span class="token class-name">ConfigChangeBatchListenResponse</span> listenResponse <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ConfigChangeBatchListenResponse</span><span class="token punctuation">)</span> <span class="token function">requestProxy</span><span class="token punctuation">(</span>
                            rpcClient<span class="token punctuation">,</span> configChangeListenRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>listenResponse <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> listenResponse<span class="token punctuation">.</span><span class="token function">isSuccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

                        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> changeKeys <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ConfigChangeBatchListenResponse<span class="token punctuation">.</span>ConfigContext</span><span class="token punctuation">&gt;</span></span> changedConfigs <span class="token operator">=</span> listenResponse<span class="token punctuation">.</span><span class="token function">getChangedConfigs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token comment">// 处理更改的配置，通知侦听器</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">CollectionUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>changedConfigs<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token comment">// 存在修改的文件</span>
                            hasChangedKeys<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                          	<span class="token comment">// 遍历发生更改的文件</span>
                            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">ConfigChangeBatchListenResponse<span class="token punctuation">.</span>ConfigContext</span> changeConfig <span class="token operator">:</span> changedConfigs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                <span class="token class-name">String</span> changeKey <span class="token operator">=</span> <span class="token class-name">GroupKey</span><span class="token punctuation">.</span><span class="token function">getKeyTenant</span><span class="token punctuation">(</span>changeConfig<span class="token punctuation">.</span><span class="token function">getDataId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                        changeConfig<span class="token punctuation">.</span><span class="token function">getGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> changeConfig<span class="token punctuation">.</span><span class="token function">getTenant</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                                changeKeys<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>changeKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
                                <span class="token keyword">boolean</span> isInitializing <span class="token operator">=</span> cacheMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>changeKey<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isInitializing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                                <span class="token comment">// 刷新变更的配置 同时通知监听器</span>
                                <span class="token function">refreshContentAndCheck</span><span class="token punctuation">(</span>changeKey<span class="token punctuation">,</span> <span class="token operator">!</span>isInitializing<span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token punctuation">}</span>

                        <span class="token punctuation">}</span>

                        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">CacheData</span> cacheData <span class="token operator">:</span> listenCaches<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token keyword">if</span> <span class="token punctuation">(</span>cacheData<span class="token punctuation">.</span><span class="token function">getReceiveNotifyChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                <span class="token class-name">String</span> changeKey <span class="token operator">=</span> <span class="token class-name">GroupKey</span><span class="token punctuation">.</span><span class="token function">getKeyTenant</span><span class="token punctuation">(</span>cacheData<span class="token punctuation">.</span>dataId<span class="token punctuation">,</span> cacheData<span class="token punctuation">.</span>group<span class="token punctuation">,</span>
                                        cacheData<span class="token punctuation">.</span><span class="token function">getTenant</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>changeKeys<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>changeKey<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                    <span class="token keyword">boolean</span> isInitializing <span class="token operator">=</span> cacheMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>changeKey<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isInitializing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                                    <span class="token comment">// 刷新变更的配置 同时通知监听器</span>
                                    <span class="token function">refreshContentAndCheck</span><span class="token punctuation">(</span>changeKey<span class="token punctuation">,</span> <span class="token operator">!</span>isInitializing<span class="token punctuation">)</span><span class="token punctuation">;</span>
                                <span class="token punctuation">}</span>
                            <span class="token punctuation">}</span>
                        <span class="token punctuation">}</span>

                        <span class="token comment">//handler content configs</span>
                        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">CacheData</span> cacheData <span class="token operator">:</span> listenCaches<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            cacheData<span class="token punctuation">.</span><span class="token function">setInitializing</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token class-name">String</span> groupKey <span class="token operator">=</span> <span class="token class-name">GroupKey</span><span class="token punctuation">.</span><span class="token function">getKeyTenant</span><span class="token punctuation">(</span>cacheData<span class="token punctuation">.</span>dataId<span class="token punctuation">,</span> cacheData<span class="token punctuation">.</span>group<span class="token punctuation">,</span>
                                    cacheData<span class="token punctuation">.</span><span class="token function">getTenant</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>changeKeys<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>groupKey<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>cacheData<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>cacheData<span class="token punctuation">.</span><span class="token function">getReceiveNotifyChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                        cacheData<span class="token punctuation">.</span><span class="token function">setConsistentWithServer</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                                    <span class="token punctuation">}</span>
                                <span class="token punctuation">}</span>
                            <span class="token punctuation">}</span>
                        <span class="token punctuation">}</span>

                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token constant">LOGGER</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;Execute listen config change error &quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">try</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">50L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> interruptedException<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token comment">//ignore</span>
                    <span class="token punctuation">}</span>
                    <span class="token function">notifyListenConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            listenFutures<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>future<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">}</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Future</span> future <span class="token operator">:</span> listenFutures<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                future<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> throwable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token constant">LOGGER</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;Async listen config change error &quot;</span><span class="token punctuation">,</span> throwable<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> hasChangedKeys<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>refreshContentAndCheck获取最新的配置，同时和监听器中文件md5比对是否发生变化。配置内容发生变化则回调监听器的receiveConfigInfo方法，同时更新监听器的配置信息。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">refreshContentAndCheck</span><span class="token punctuation">(</span><span class="token class-name">String</span> groupKey<span class="token punctuation">,</span> <span class="token keyword">boolean</span> notify<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>cacheMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> cacheMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>groupKey<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">CacheData</span> cache <span class="token operator">=</span> cacheMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>groupKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">refreshContentAndCheck</span><span class="token punctuation">(</span>cache<span class="token punctuation">,</span> notify<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 获取最新的配置信息，并通知需要更新的监听器.
     * <span class="token keyword">@param</span> <span class="token parameter">cacheData</span>
     * <span class="token keyword">@param</span> <span class="token parameter">notify</span>
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">refreshContentAndCheck</span><span class="token punctuation">(</span><span class="token class-name">CacheData</span> cacheData<span class="token punctuation">,</span> <span class="token keyword">boolean</span> notify<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// 请求服务端 获取最新的配置信息</span>
            <span class="token class-name">ConfigResponse</span> response <span class="token operator">=</span> <span class="token function">getServerConfig</span><span class="token punctuation">(</span>cacheData<span class="token punctuation">.</span>dataId<span class="token punctuation">,</span> cacheData<span class="token punctuation">.</span>group<span class="token punctuation">,</span> cacheData<span class="token punctuation">.</span>tenant<span class="token punctuation">,</span> <span class="token number">3000L</span><span class="token punctuation">,</span>
                    notify<span class="token punctuation">)</span><span class="token punctuation">;</span>
            cacheData<span class="token punctuation">.</span><span class="token function">setEncryptedDataKey</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getEncryptedDataKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            cacheData<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> response<span class="token punctuation">.</span><span class="token function">getConfigType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                cacheData<span class="token punctuation">.</span><span class="token function">setType</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getConfigType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>notify<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token constant">LOGGER</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;[{}] [data-received] dataId={}, group={}, tenant={}, md5={}, content={}, type={}&quot;</span><span class="token punctuation">,</span>
                        agent<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> cacheData<span class="token punctuation">.</span>dataId<span class="token punctuation">,</span> cacheData<span class="token punctuation">.</span>group<span class="token punctuation">,</span> cacheData<span class="token punctuation">.</span>tenant<span class="token punctuation">,</span> cacheData<span class="token punctuation">.</span><span class="token function">getMd5</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                        <span class="token class-name">ContentUtils</span><span class="token punctuation">.</span><span class="token function">truncateContent</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span><span class="token function">getConfigType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// 通知需要更新的监听器</span>
            cacheData<span class="token punctuation">.</span><span class="token function">checkListenerMd5</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token constant">LOGGER</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;refresh content and check md5 fail ,dataId={},group={},tenant={} &quot;</span><span class="token punctuation">,</span> cacheData<span class="token punctuation">.</span>dataId<span class="token punctuation">,</span>
                    cacheData<span class="token punctuation">.</span>group<span class="token punctuation">,</span> cacheData<span class="token punctuation">.</span>tenant<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="客户端查询配置" tabindex="-1"><a class="header-anchor" href="#客户端查询配置" aria-hidden="true">#</a> 客户端查询配置</h3><p>入口都是NacosConfigService。最终构建ConfigQueryResponse请求服务端。</p><h3 id="客户端修改配置。" tabindex="-1"><a class="header-anchor" href="#客户端修改配置。" aria-hidden="true">#</a> 客户端修改配置。</h3><p>以发布配置为例，客户端构建ConfigPublishRequest请求服务端。</p><h2 id="服务端" tabindex="-1"><a class="header-anchor" href="#服务端" aria-hidden="true">#</a> 服务端</h2><h3 id="服务端程序启动保存配置到磁盘" tabindex="-1"><a class="header-anchor" href="#服务端程序启动保存配置到磁盘" aria-hidden="true">#</a> 服务端程序启动保存配置到磁盘</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Conditional</span><span class="token punctuation">(</span><span class="token class-name">ConditionOnExternalStorage</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Component</span>
<span class="token annotation punctuation">@DependsOn</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;rpcConfigChangeNotifier&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExternalDumpService</span> <span class="token keyword">extends</span> <span class="token class-name">DumpService</span> <span class="token punctuation">{</span>
   
    
    <span class="token annotation punctuation">@PostConstruct</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">{</span>
        <span class="token function">dumpOperate</span><span class="token punctuation">(</span>processor<span class="token punctuation">,</span> dumpAllProcessor<span class="token punctuation">,</span> dumpAllBetaProcessor<span class="token punctuation">,</span> dumpAllTagProcessor<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">boolean</span> <span class="token function">canExecute</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> memberManager<span class="token punctuation">.</span><span class="token function">isFirstIp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

   <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">dumpOperate</span><span class="token punctuation">(</span><span class="token class-name">DumpProcessor</span> processor<span class="token punctuation">,</span> <span class="token class-name">DumpAllProcessor</span> dumpAllProcessor<span class="token punctuation">,</span>
            <span class="token class-name">DumpAllBetaProcessor</span> dumpAllBetaProcessor<span class="token punctuation">,</span> <span class="token class-name">DumpAllTagProcessor</span> dumpAllTagProcessor<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">NacosException</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> dumpFileContext <span class="token operator">=</span> <span class="token string">&quot;CONFIG_DUMP_TO_FILE&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">TimerContext</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span>dumpFileContext<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">LogUtil</span><span class="token punctuation">.</span><span class="token constant">DEFAULT_LOG</span><span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;DumpService start&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            
            <span class="token class-name">Runnable</span> dumpAll <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> dumpAllTaskMgr<span class="token punctuation">.</span><span class="token function">addTask</span><span class="token punctuation">(</span><span class="token class-name">DumpAllTask</span><span class="token punctuation">.</span><span class="token constant">TASK_ID</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">DumpAllTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            
            <span class="token class-name">Runnable</span> dumpAllBeta <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> dumpAllTaskMgr<span class="token punctuation">.</span><span class="token function">addTask</span><span class="token punctuation">(</span><span class="token class-name">DumpAllBetaTask</span><span class="token punctuation">.</span><span class="token constant">TASK_ID</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">DumpAllBetaTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            
            <span class="token class-name">Runnable</span> dumpAllTag <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> dumpAllTaskMgr<span class="token punctuation">.</span><span class="token function">addTask</span><span class="token punctuation">(</span><span class="token class-name">DumpAllTagTask</span><span class="token punctuation">.</span><span class="token constant">TASK_ID</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">DumpAllTagTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            
            <span class="token class-name">Runnable</span> clearConfigHistory <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                <span class="token constant">LOGGER</span><span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;clearConfigHistory start&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">canExecute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">try</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Timestamp</span> startTime <span class="token operator">=</span> <span class="token function">getBeforeStamp</span><span class="token punctuation">(</span><span class="token class-name">TimeUtils</span><span class="token punctuation">.</span><span class="token function">getCurrentTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">24</span> <span class="token operator">*</span> <span class="token function">getRetentionDays</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">int</span> pageSize <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span>
                        <span class="token constant">LOGGER</span><span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;clearConfigHistory, getBeforeStamp:{}, pageSize:{}&quot;</span><span class="token punctuation">,</span> startTime<span class="token punctuation">,</span> pageSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        historyConfigInfoPersistService<span class="token punctuation">.</span><span class="token function">removeConfigHistory</span><span class="token punctuation">(</span>startTime<span class="token punctuation">,</span> pageSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token constant">LOGGER</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;clearConfigHistory error : {}&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
            
            <span class="token class-name">Timestamp</span> currentTime <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Timestamp</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
              <span class="token comment">// 转存配置 执行一次DumpAllTask</span>
                <span class="token function">dumpConfigInfo</span><span class="token punctuation">(</span>dumpAllProcessor<span class="token punctuation">)</span><span class="token punctuation">;</span>
                
                <span class="token comment">// update Beta cache</span>
                <span class="token class-name">LogUtil</span><span class="token punctuation">.</span><span class="token constant">DEFAULT_LOG</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;start clear all config-info-beta.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">DiskUtil</span><span class="token punctuation">.</span><span class="token function">clearAllBeta</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>namespacePersistService<span class="token punctuation">.</span><span class="token function">isExistTable</span><span class="token punctuation">(</span><span class="token constant">BETA_TABLE_NAME</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    dumpAllBetaProcessor<span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DumpAllBetaTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment">// update Tag cache</span>
                <span class="token class-name">LogUtil</span><span class="token punctuation">.</span><span class="token constant">DEFAULT_LOG</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;start clear all config-info-tag.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">DiskUtil</span><span class="token punctuation">.</span><span class="token function">clearAllTag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>namespacePersistService<span class="token punctuation">.</span><span class="token function">isExistTable</span><span class="token punctuation">(</span><span class="token constant">TAG_TABLE_NAME</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    dumpAllTagProcessor<span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DumpAllTagTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                
                <span class="token comment">// add to dump aggr</span>
                <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ConfigInfoChanged</span><span class="token punctuation">&gt;</span></span> configList <span class="token operator">=</span> configInfoAggrPersistService<span class="token punctuation">.</span><span class="token function">findAllAggrGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>configList <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>configList<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    total <span class="token operator">=</span> configList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">ConfigInfoChanged</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> splitList <span class="token operator">=</span> <span class="token function">splitList</span><span class="token punctuation">(</span>configList<span class="token punctuation">,</span> <span class="token constant">INIT_THREAD_COUNT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ConfigInfoChanged</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">:</span> splitList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">MergeAllDataWorker</span> work <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MergeAllDataWorker</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        work<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token constant">LOGGER</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;server start, schedule merge end.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">LogUtil</span><span class="token punctuation">.</span><span class="token constant">FATAL_LOG</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>
                        <span class="token string">&quot;Nacos Server did not start because dumpservice bean construction failure :\\n&quot;</span> <span class="token operator">+</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NacosException</span><span class="token punctuation">(</span><span class="token class-name">NacosException</span><span class="token punctuation">.</span><span class="token constant">SERVER_ERROR</span><span class="token punctuation">,</span>
                        <span class="token string">&quot;Nacos Server did not start because dumpservice bean construction failure :\\n&quot;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                        e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">EnvUtil</span><span class="token punctuation">.</span><span class="token function">getStandaloneMode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Runnable</span> heartbeat <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    <span class="token class-name">String</span> heartBeatTime <span class="token operator">=</span> <span class="token class-name">TimeUtils</span><span class="token punctuation">.</span><span class="token function">getCurrentTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">// write disk</span>
                    <span class="token keyword">try</span> <span class="token punctuation">{</span>
                        <span class="token class-name">DiskUtil</span><span class="token punctuation">.</span><span class="token function">saveHeartBeatToDisk</span><span class="token punctuation">(</span>heartBeatTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">LogUtil</span><span class="token punctuation">.</span><span class="token constant">FATAL_LOG</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;save heartbeat fail&quot;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">;</span>
                
                <span class="token class-name">ConfigExecutor</span><span class="token punctuation">.</span><span class="token function">scheduleConfigTask</span><span class="token punctuation">(</span>heartbeat<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                
                <span class="token keyword">long</span> initialDelay <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token constant">INITIAL_DELAY_IN_MINUTE</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">;</span>
                <span class="token class-name">LogUtil</span><span class="token punctuation">.</span><span class="token constant">DEFAULT_LOG</span><span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;initialDelay:{}&quot;</span><span class="token punctuation">,</span> initialDelay<span class="token punctuation">)</span><span class="token punctuation">;</span>
              
                <span class="token comment">// 6个小时执行一次DumpAllTask</span>
                <span class="token class-name">ConfigExecutor</span><span class="token punctuation">.</span><span class="token function">scheduleConfigTask</span><span class="token punctuation">(</span>dumpAll<span class="token punctuation">,</span> initialDelay<span class="token punctuation">,</span> <span class="token constant">DUMP_ALL_INTERVAL_IN_MINUTE</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">MINUTES</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">ConfigExecutor</span><span class="token punctuation">.</span><span class="token function">scheduleConfigTask</span><span class="token punctuation">(</span>dumpAllBeta<span class="token punctuation">,</span> initialDelay<span class="token punctuation">,</span> <span class="token constant">DUMP_ALL_INTERVAL_IN_MINUTE</span><span class="token punctuation">,</span>
                        <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">MINUTES</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">ConfigExecutor</span><span class="token punctuation">.</span><span class="token function">scheduleConfigTask</span><span class="token punctuation">(</span>dumpAllTag<span class="token punctuation">,</span> initialDelay<span class="token punctuation">,</span> <span class="token constant">DUMP_ALL_INTERVAL_IN_MINUTE</span><span class="token punctuation">,</span>
                        <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">MINUTES</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">ConfigExecutor</span><span class="token punctuation">.</span><span class="token function">scheduleConfigTask</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DumpChangeConfigWorker</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> currentTime<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>
                        <span class="token constant">DUMP_CHANGE_INTERVAL_IN_SECONDS</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                
            <span class="token punctuation">}</span>
            
            <span class="token class-name">ConfigExecutor</span><span class="token punctuation">.</span><span class="token function">scheduleConfigTask</span><span class="token punctuation">(</span>clearConfigHistory<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">MINUTES</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token class-name">TimerContext</span><span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span>dumpFileContext<span class="token punctuation">,</span> <span class="token class-name">LogUtil</span><span class="token punctuation">.</span><span class="token constant">DUMP_LOG</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        
    <span class="token punctuation">}</span>
    
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>process()会分页查询出数据库的所有配置，然后一个一个调用ConfigCacheService.dump()。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">process</span><span class="token punctuation">(</span><span class="token class-name">NacosTask</span> task<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">long</span> currentMaxId <span class="token operator">=</span> configInfoPersistService<span class="token punctuation">.</span><span class="token function">findConfigMaxId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">long</span> lastMaxId <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>lastMaxId <span class="token operator">&lt;</span> currentMaxId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ConfigInfoWrapper</span><span class="token punctuation">&gt;</span></span> page <span class="token operator">=</span> configInfoPersistService<span class="token punctuation">.</span><span class="token function">findAllConfigInfoFragment</span><span class="token punctuation">(</span>lastMaxId<span class="token punctuation">,</span> <span class="token constant">PAGE_SIZE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>page <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> page<span class="token punctuation">.</span><span class="token function">getPageItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> page<span class="token punctuation">.</span><span class="token function">getPageItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">ConfigInfoWrapper</span> cf <span class="token operator">:</span> page<span class="token punctuation">.</span><span class="token function">getPageItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">long</span> id <span class="token operator">=</span> cf<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            lastMaxId <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> lastMaxId<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>cf<span class="token punctuation">.</span><span class="token function">getDataId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">AggrWhitelist</span><span class="token punctuation">.</span><span class="token constant">AGGRIDS_METADATA</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">AggrWhitelist</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>cf<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            
            <span class="token keyword">if</span> <span class="token punctuation">(</span>cf<span class="token punctuation">.</span><span class="token function">getDataId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">ClientIpWhiteList</span><span class="token punctuation">.</span><span class="token constant">CLIENT_IP_WHITELIST_METADATA</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">ClientIpWhiteList</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>cf<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            
            <span class="token keyword">if</span> <span class="token punctuation">(</span>cf<span class="token punctuation">.</span><span class="token function">getDataId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">SwitchService</span><span class="token punctuation">.</span><span class="token constant">SWITCH_META_DATA_ID</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">SwitchService</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>cf<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token comment">// dump为文件</span>
            <span class="token class-name">ConfigCacheService</span><span class="token punctuation">.</span><span class="token function">dump</span><span class="token punctuation">(</span>cf<span class="token punctuation">.</span><span class="token function">getDataId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> cf<span class="token punctuation">.</span><span class="token function">getGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> cf<span class="token punctuation">.</span><span class="token function">getTenant</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> cf<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    cf<span class="token punctuation">.</span><span class="token function">getLastModified</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> cf<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> cf<span class="token punctuation">.</span><span class="token function">getEncryptedDataKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            
            <span class="token keyword">final</span> <span class="token class-name">String</span> content <span class="token operator">=</span> cf<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">final</span> <span class="token class-name">String</span> md5 <span class="token operator">=</span> <span class="token class-name">MD5Utils</span><span class="token punctuation">.</span><span class="token function">md5Hex</span><span class="token punctuation">(</span>content<span class="token punctuation">,</span> <span class="token class-name">Constants</span><span class="token punctuation">.</span><span class="token constant">ENCODE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">LogUtil</span><span class="token punctuation">.</span><span class="token constant">DUMP_LOG</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;[dump-all-ok] {}, {}, length={}, md5={}&quot;</span><span class="token punctuation">,</span>
                    <span class="token class-name">GroupKey2</span><span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span>cf<span class="token punctuation">.</span><span class="token function">getDataId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> cf<span class="token punctuation">.</span><span class="token function">getGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> cf<span class="token punctuation">.</span><span class="token function">getLastModified</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> content<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    md5<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token constant">DEFAULT_LOG</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;[all-dump] {} / {}&quot;</span><span class="token punctuation">,</span> lastMaxId<span class="token punctuation">,</span> currentMaxId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>dump()就是将数据库的配置，保存到本地，一个配置对应一个文件，这样客户端来查询配置，直接查的本地文件，而不是查数据库。同时会发布LocalDataChangeEvent，触发回调客户端监听的逻辑。RpcConfigChangeNotifier监听LocalDataChangeEvent，向客户端发送ConfigChangeNotifyRequest。</p><h3 id="服务端查询配置" tabindex="-1"><a class="header-anchor" href="#服务端查询配置" aria-hidden="true">#</a> 服务端查询配置</h3><p>如果不是内嵌式数据库，其实查的是本地文件，以此减轻数据库的压力。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">ConfigQueryRequestHandler</span>：
  
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">PropertyUtil</span><span class="token punctuation">.</span><span class="token function">isDirectRead</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    configInfoBase <span class="token operator">=</span> configInfoBetaPersistService<span class="token punctuation">.</span><span class="token function">findConfigInfo4Beta</span><span class="token punctuation">(</span>dataId<span class="token punctuation">,</span> group<span class="token punctuation">,</span> tenant<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    content <span class="token operator">=</span> <span class="token class-name">ConfigDiskServiceFactory</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBetaContent</span><span class="token punctuation">(</span>dataId<span class="token punctuation">,</span> group<span class="token punctuation">,</span> tenant<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="服务端修改配置" tabindex="-1"><a class="header-anchor" href="#服务端修改配置" aria-hidden="true">#</a> 服务端修改配置</h3><p>入库，然后修改配置还会触发ConfigDataChangeEvent，最终通过AsyncNotifyService执行AsyncRpcTask，还是会dump为本地文件。</p>`,27);function d(v,m){const a=l("ExternalLinkIcon");return p(),c("div",null,[u,n("p",null,[n("a",k,[e("Spring Boot配置加载流程"),o(a)])]),r])}const g=t(i,[["render",d],["__file","config.html.vue"]]);export{g as default};
