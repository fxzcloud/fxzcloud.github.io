const l=JSON.parse('{"key":"v-9d60f5a4","path":"/article/offer/08-message-queue.html","title":"消息队列","lang":"zh-CN","frontmatter":{"category":["interview"]},"headers":[{"level":3,"title":"1.为什么要用消息队列？","slug":"_1-为什么要用消息队列","link":"#_1-为什么要用消息队列","children":[]},{"level":3,"title":"2.使用消息队列带来的一些问题？","slug":"_2-使用消息队列带来的一些问题","link":"#_2-使用消息队列带来的一些问题","children":[]},{"level":3,"title":"3.什么是JMS ？","slug":"_3-什么是jms","link":"#_3-什么是jms","children":[]},{"level":3,"title":"4.JMS 两种消息模型？","slug":"_4-jms-两种消息模型","link":"#_4-jms-两种消息模型","children":[]},{"level":3,"title":"5.JMS 五种不同的消息正文格式","slug":"_5-jms-五种不同的消息正文格式","link":"#_5-jms-五种不同的消息正文格式","children":[]},{"level":3,"title":"6.什么是AMQP？","slug":"_6-什么是amqp","link":"#_6-什么是amqp","children":[]},{"level":3,"title":"7.JMS vs AMQP","slug":"_7-jms-vs-amqp","link":"#_7-jms-vs-amqp","children":[]},{"level":3,"title":"8.什么是Producer、Consumer、Broker、Topic、Partition？","slug":"_8-什么是producer、consumer、broker、topic、partition","link":"#_8-什么是producer、consumer、broker、topic、partition","children":[]},{"level":3,"title":"9.Kafka 的多副本机制了解吗？带来了什么好处？","slug":"_9-kafka-的多副本机制了解吗-带来了什么好处","link":"#_9-kafka-的多副本机制了解吗-带来了什么好处","children":[]},{"level":3,"title":"10.Kafka 如何保证消息的消费顺序？","slug":"_10-kafka-如何保证消息的消费顺序","link":"#_10-kafka-如何保证消息的消费顺序","children":[]},{"level":3,"title":"11.Kafka 如何保证消息不丢失？","slug":"_11-kafka-如何保证消息不丢失","link":"#_11-kafka-如何保证消息不丢失","children":[]},{"level":3,"title":"12.Kafka 如何保证消息不重复消费？","slug":"_12-kafka-如何保证消息不重复消费","link":"#_12-kafka-如何保证消息不重复消费","children":[]},{"level":3,"title":"13.RabbitMQ 核心概念？","slug":"_13-rabbitmq-核心概念","link":"#_13-rabbitmq-核心概念","children":[]},{"level":3,"title":"14.RocketMq事务消息流程","slug":"_14-rocketmq事务消息流程","link":"#_14-rocketmq事务消息流程","children":[]},{"level":3,"title":"15.RabbitMQ如何确保消息发送和消息接收","slug":"_15-rabbitmq如何确保消息发送和消息接收","link":"#_15-rabbitmq如何确保消息发送和消息接收","children":[]},{"level":3,"title":"16.RabbitMQ死信队列、延时队列分别是什么","slug":"_16-rabbitmq死信队列、延时队列分别是什么","link":"#_16-rabbitmq死信队列、延时队列分别是什么","children":[]},{"level":3,"title":"17.简述kafka架构设计是什么样？","slug":"_17-简述kafka架构设计是什么样","link":"#_17-简述kafka架构设计是什么样","children":[]},{"level":3,"title":"18.Kafka消息丢失的场景有哪些","slug":"_18-kafka消息丢失的场景有哪些","link":"#_18-kafka消息丢失的场景有哪些","children":[]},{"level":3,"title":"19.kafka的ACK机制","slug":"_19-kafka的ack机制","link":"#_19-kafka的ack机制","children":[]},{"level":3,"title":"20.Offset机制","slug":"_20-offset机制","link":"#_20-offset机制","children":[]},{"level":3,"title":"21.Kafka是pull？push？以及优劣势分析","slug":"_21-kafka是pull-push-以及优劣势分析","link":"#_21-kafka是pull-push-以及优劣势分析","children":[]},{"level":3,"title":"22.kafka的rebalance机制是什么","slug":"_22-kafka的rebalance机制是什么","link":"#_22-kafka的rebalance机制是什么","children":[]},{"level":3,"title":"23.Kafka的消费者如何消费数据","slug":"_23-kafka的消费者如何消费数据","link":"#_23-kafka的消费者如何消费数据","children":[]},{"level":3,"title":"24.RocketMQ的实现原理","slug":"_24-rocketmq的实现原理","link":"#_24-rocketmq的实现原理","children":[]},{"level":3,"title":"25.RocketMQ为什么速度快","slug":"_25-rocketmq为什么速度快","link":"#_25-rocketmq为什么速度快","children":[]},{"level":3,"title":"26.消息队列如何保证消息可靠传输","slug":"_26-消息队列如何保证消息可靠传输","link":"#_26-消息队列如何保证消息可靠传输","children":[]},{"level":3,"title":"27.消息队列有哪些作⽤","slug":"_27-消息队列有哪些作用","link":"#_27-消息队列有哪些作用","children":[]},{"level":3,"title":"28.如何保证消息的⾼效读写？","slug":"_28-如何保证消息的高效读写","link":"#_28-如何保证消息的高效读写","children":[]},{"level":3,"title":"29.如何确保消息不丢失","slug":"_29-如何确保消息不丢失","link":"#_29-如何确保消息不丢失","children":[]},{"level":3,"title":"30.如何检测消息丢失","slug":"_30-如何检测消息丢失","link":"#_30-如何检测消息丢失","children":[]},{"level":3,"title":"31.MQ怎么解决重复消费的问题","slug":"_31-mq怎么解决重复消费的问题","link":"#_31-mq怎么解决重复消费的问题","children":[]},{"level":3,"title":"32.MQ消息积压怎么解决","slug":"_32-mq消息积压怎么解决","link":"#_32-mq消息积压怎么解决","children":[]},{"level":3,"title":"33.rocketMq如何保证顺序消费","slug":"_33-rocketmq如何保证顺序消费","link":"#_33-rocketmq如何保证顺序消费","children":[]},{"level":3,"title":"34.rocketMq如何保证消息不丢失","slug":"_34-rocketmq如何保证消息不丢失","link":"#_34-rocketmq如何保证消息不丢失","children":[]},{"level":3,"title":"35.partition的数据文件（offffset，MessageSize，data）","slug":"_35-partition的数据文件-offffset-messagesize-data","link":"#_35-partition的数据文件-offffset-messagesize-data","children":[]},{"level":3,"title":"36.Kafka 中的ISR(InSyncRepli)、OSR(OutSyncRepli)、AR(AllRepli)代表什么？","slug":"_36-kafka-中的isr-insyncrepli-、osr-outsyncrepli-、ar-allrepli-代表什么","link":"#_36-kafka-中的isr-insyncrepli-、osr-outsyncrepli-、ar-allrepli-代表什么","children":[]},{"level":3,"title":"37.Kafka的那些设计让它有如此高的性能?","slug":"_37-kafka的那些设计让它有如此高的性能","link":"#_37-kafka的那些设计让它有如此高的性能","children":[]},{"level":3,"title":"38.rocketMq如何保证高可用","slug":"_38-rocketmq如何保证高可用","link":"#_38-rocketmq如何保证高可用","children":[]},{"level":3,"title":"39.RocketMq消费者消费模式有几种","slug":"_39-rocketmq消费者消费模式有几种","link":"#_39-rocketmq消费者消费模式有几种","children":[]},{"level":3,"title":"40.RocketMq延迟消息？如何实现的","slug":"_40-rocketmq延迟消息-如何实现的","link":"#_40-rocketmq延迟消息-如何实现的","children":[]},{"level":3,"title":"41.RocketMq是推模型还是拉模型","slug":"_41-rocketmq是推模型还是拉模型","link":"#_41-rocketmq是推模型还是拉模型","children":[]},{"level":3,"title":"42.kafka 的零拷贝原理?","slug":"_42-kafka-的零拷贝原理","link":"#_42-kafka-的零拷贝原理","children":[]}],"git":{"createdTime":1710657223000,"updatedTime":1711092855000,"contributors":[{"name":"付绪壮","email":"2235602974@qq.com","commits":2}]},"readingTime":{"minutes":89.01,"words":13351},"filePathRelative":"article/offer/08-message-queue.md","localizedDate":"2024年3月17日","copyright":{}}');export{l as data};
